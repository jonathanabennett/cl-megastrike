* Plan for a computer based AS game.
Swap to Beast for an ECS system rather than what I currently have?

I think this would really clean up elements a lot, but I'll need to think hard about how to define different aspects.
** Aspect Design for Elements

*** ID Info
The Elements's name, the Elements's model info, The Elements's type, the Element's role, point-value, size
*** Damageable
Current/Max armor, Current/Max structure, Critical hits info
*** Moveable
move-alist
**** Moves are an alist
Format below:
#+begin_src lisp
((:walk . 4) (:jump . 4))
#+end_src

This can be accessed using:
#+begin_src lisp
(assoc :walk *move-alist*)
#+end_src

This returns ~nil~ if the unit doesn't have the the appropriate move-type
*** Attack
Short, Medium, Long
*** Heat
OV, current Heat
*** Specials
specials (this will literally just be a dumb list for now)
*** Display
image path
*** Location
q, r, s
*** Pilot
name, skill
** Entities
Elements default Location and Pilot values to nil to begin with
** Teams, Initiative, and Unit Lists
Move unit drawing looping logic out to teams since they're the ones that hold color and initiative information.
*** Who knows what?
The elements can't know their initiative because it's based on the team
Teams are
** Maps and Boards
How do I represent the map before vs. during vs. after the lobby?
*** Before and During the Lobby
Represent the map as a nested list of board objects. This will require me to expand the existing board class so it supports any extra details I need.
*** After the Lobby
Write a function which maps over the board objects in the nested list and copy the tiles into a game board object, offsetting them appropriately.
*** Representing Terrain
What are the things I need to know about terrain, according to the charts in the back of Alphastrike?

- Type
- Height

I'm sure there's more in the advanced rules, but this will do for now. I can represent this pretty easily with just a plist
* Point Release plan
** 0.1.0
*** Next Steps
**** Map
Zooming

Refactor code so it makes better sense (similar to how we did unit cards).
**** Movement
Calculate movement as simple straight-line distance (I can use this calculation for range later).
**** Attack
Roll to hit.
Roll for damage.

Manage screen updates.
** 0.1.1
*** Planned Expansion
**** Map
The hex drawing is confusing and needs to be cleaned up. I also don't like the positioning of the hex number.

Make presentation types for the minimap hexes (if necessary).
